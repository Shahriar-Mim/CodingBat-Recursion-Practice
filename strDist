Question: 
Given a string and a non-empty substring sub, compute recursively the largest substring which starts and ends with sub and return its length.

strDist("catcowcat", "cat") → 9
strDist("catcowcat", "cow") → 3
strDist("cccatcowcatxx", "cat") → 9


Solution: 
public int strDist(String str, String sub) {
  int len = sub.length(); 
  if(str.length()>=len){
    if(str.substring(0,len).equals(sub)){
      if(str.substring(str.length()-len).equals(sub)){
        return str.length(); 
      }
      return strDist(str.substring(0,str.length()-1),sub);
    }
    return strDist(str.substring(1),sub);
  }
  return 0 ;
}
